<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /x//+P8f//h+H//8fj///AA///4Af///AP8=
</value>
  </data>
</root>